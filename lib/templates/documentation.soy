// Copyright 2016 Artem Lytvynov <buntarb@gmail.com>. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS-IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/**
 * @license Apache-2.0
 * @copyright Artem Lytvynov <buntarb@gmail.com>
 */
{namespace zz.ide.templates.documentation}

/**
 * @param key
 * @param value
 */
{template .default}
    <div
        class="{css documentation}">
        <div
            class="{css documentation--title}">
            <span
                class="{css documentation--kind}">
                {$value.kind}&#160;
            </span>
            <span
                class="{css documentation--name}">
                {$value.name}
            </span>
        </div>
        <div
            class="{css documentation--file}">
            <span>
                Provided in file: &#160;
            </span>
            <span>
                {$value.filename}
            </span>
        </div>
        <div
            class="{css documentation--extends}">
            <span>
                Extends: &#160;
            </span>
            <span>
                {$value.parent}
            </span>
        </div>
        <div
            class="{css documentation--description}">
            {$value.description}
        </div>
        <div
            class="{css documentation--constructor-wrapper}">
            <span
                class="{css documentation--constructor-name}">
                new &#160; {$value.name}( &#160;
            </span>
            <span
                class="{css documentation--constructor-params}">
                {foreach $param in $value.params}
                    {if isFirst($param)}
                       {$param.name}
                    {/if}
                    {if not isFirst($param)}
                       , &#160; {$param.name}
                    {/if}
                    {ifempty}
                {/foreach}
                &#160;
            </span>
            <span
                class="{css documentation--constructor-name}">
                )
            </span>
        </div>
        <div
            class="{css documentation--params-block}">
            <div>
                Parameters
            </div>
            <div
                class="{css documentation--params-wrapper}"
                data-model="{$key.params}"
                data-view="documentationParams"
                data-controller="documentationParams">
            </div>
        </div>
        {if $value.method.length}
            <div
                class="{css documentation--method-title}">
                Instance Methods
            </div>
        {/if}
        <div
            class="{css documentation--method-wrapper}"
            data-model="{$key.method}"
            data-view="documentationMethod"
            data-controller="documentationMethod">
        </div>
        {if $value.property.length}
            <div
                class="{css documentation--property-title}">
                Properties
            </div>
        {/if}
        <div
            class="{css documentation--property-wrapper}"
            data-model="{$key.property}"
            data-view="documentationProperty"
            data-controller="documentationProperty">
        </div>
    </div>
{/template}

/**
 * @param value
 */
{template .notsupported}
    <div
        class="{css documentation-node}">
        <div
            class="{css documentation-title}">
            <span
                class="{css documentation-name}">
                {$value.name}
            </span>
        </div>
    </div>
{/template}